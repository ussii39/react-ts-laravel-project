{"version":3,"sources":["logo.svg","redux/selectors.js","redux/actions.js","redux/operations.js","Login.jsx","Home.jsx","About.jsx","Questions.js","Question.jsx","Header.jsx","AnswerSpace.jsx","App.jsx","reportWebVitals.ts","store/initialState.js","redux/reducers.js","store/store.js","index.jsx"],"names":["usersSelector","state","users","getUserisSignIn","createSelector","uid","isSignIn","getUsername","name","getUsertoken","token","SIGN_IN","SIGN_OUT","signout","dispatch","getState","a","axios","post","headers","Authorization","then","res","type","payload","id","console","log","data","Login","urlParamStr","window","location","pathname","split","useDispatch","selector","useSelector","useState","email","setemail","password","setPassword","handleInput","e","value","target","to","onChange","onClick","SendEmail","action","data-netlify","placeholder","userState","user","signIn","get","params","Home","About","date","firstWeek","setfirstWeek","secondWeek","setsecondWeek","thirdWeek","setthirdWeek","forthWeek","setforthWeek","dt","Date","strings","getMonth","getFullYear","getDate","toString","arr","i","newarr","forEach","ar","strin","charAt","firstweek","slice","secondweek","thirdweek","forthweek","useEffect","tokens","localStorage","getItem","getUser","className","map","d","QuestionArrays","question5","Question","children","props","MyAnswer","setMyAnswer","AnswerStatus","setAnswerStatus","Value","setValue","progress","setProperty","inputRef","useRef","getAnswerStatus","ChartPercent","result01","filter","completed","length","question","Math","floor","pow","authorization","response","animate","size","lineWidth","progressColor","進捗部分の色","bgColor","textColor","textStyle","font","percentSpacing","roundedStroke","showPercentage","showPercentageSymbol","ques","index","question1","question2","question3","ref","answer","ResetId","find","val","put","ResetCompleted","disabled","quesId","AnswerId","secondData","resId","va","CompletedStatus","current","SubmitAnswer","Header","AnswerSpace","setanswer","ans","title","App","todos","exact","path","component","todo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","UsersReducer","Actions","history","History","store","compose","persistState","reduxCreateStore","combineReducers","router","connectRouter","applyMiddleware","routerMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d81eaa4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { createSelector } from \"reselect\";\r\n\r\nconst usersSelector = (state) => state.users;\r\n\r\nexport const getUserId = createSelector([usersSelector], (state) => state.uid);\r\n\r\nexport const getUserisSignIn = createSelector(\r\n  [usersSelector],\r\n  (state) => state.isSignIn\r\n);\r\n\r\nexport const getUsername = createSelector(\r\n  [usersSelector],\r\n  (state) => state.name\r\n);\r\n\r\nexport const getUsertoken = createSelector(\r\n  [usersSelector],\r\n  (state) => state.token\r\n);\r\n","export const SIGN_IN = \"SIGN_IN\";\r\n\r\nexport const signInAction = (userState) => {\r\n  return {\r\n    type: \"SIGN_IN\",\r\n    payload: {\r\n      isSignIn: true,\r\n      name: userState.name,\r\n      id: userState.id,\r\n      token: userState.token,\r\n    },\r\n  };\r\n};\r\n\r\n// export const GET_LOGIN_USER = \"GET_LOGIN_USER\";\r\n\r\n// export const getUserAction = (userinfo) => {\r\n//   return {\r\n//     type: \"GET_LOGIN_USER\",\r\n//     payload: {\r\n//       isSignIn: true,\r\n//       name: userinfo.name,\r\n//       id: userinfo.id,\r\n//       token: userinfo.token,\r\n//     },\r\n//   };\r\n// };\r\n\r\nexport const SIGN_OUT = \"SIGN_OUT\";\r\n\r\nexport const signOutAction = () => {\r\n  return {\r\n    type: \"SIGN_OUT\",\r\n    payload: {\r\n      isSignIn: false,\r\n      name: \"\",\r\n      id: \"\",\r\n      token: \"\",\r\n    },\r\n  };\r\n};\r\n","import { getUserAction, signInAction, signOutAction } from \"./actions\";\r\nimport { push } from \"connected-react-router\";\r\nimport axios from \"axios\";\r\n\r\nexport const signIn = (email, password) => {\r\n  return async (dispatch) => {\r\n    if (email === \"\" || password === \"\") {\r\n      return false;\r\n    }\r\n    const data = { email: email, \"form-name\": \"contact\", password: password };\r\n    axios\r\n      .post(\"/api/login\", data, {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      })\r\n\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        const data = res.data;\r\n\r\n        dispatch(\r\n          signInAction({\r\n            isSignIn: true,\r\n            id: data.user.id,\r\n            name: data.user.name,\r\n            token: data.user.token,\r\n          })\r\n        );\r\n      });\r\n  };\r\n};\r\n\r\n// export const GetloginUser = () => {\r\n//   return async (dispatch, getState) => {\r\n//     const GetUser = getState().users.token;\r\n//     console.log(GetUser);\r\n//     if (GetUser === \"\") {\r\n//       return;\r\n//     }\r\n//     axios.get(\"/api/login\", { params: { token: GetUser } }).then((res) => {\r\n//       const data = res.data;\r\n//       console.log(data);\r\n//       dispatch(\r\n//         getUserAction({\r\n//           isSignIn: true,\r\n//           id: data.user.id,\r\n//           name: data.user.name,\r\n//           token: data.user.token,\r\n//         })\r\n//       );\r\n//     });\r\n//   };\r\n// };\r\n\r\nexport const signout = () => {\r\n  return async (dispatch, getState) => {\r\n    const token = getState().users.token;\r\n    axios\r\n      .post(\"/api/logout\", \"\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        dispatch(signOutAction());\r\n        console.log(res.data, \"ログアウトしました\");\r\n      });\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserisSignIn, getUsername, getUsertoken } from \"./redux/selectors\";\r\nimport { GetloginUser, signIn, signout } from \"./redux/operations\";\r\n\r\nexport const Login = () => {\r\n  const urlParamStr = window.location.pathname.split(\"/verify/\")[1];\r\n  const dispatch = useDispatch();\r\n  const selector = useSelector((state) => state);\r\n\r\n  const user = getUsername(selector);\r\n  const isSignIn = getUserisSignIn(selector);\r\n  const token = getUsertoken(selector);\r\n\r\n  const [email, setemail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleInput = (e) => {\r\n    const value = e.target.value;\r\n    setemail(value);\r\n  };\r\n\r\n  const InputPassword = (e) => {\r\n    const value = e.target.value;\r\n    setPassword(value);\r\n  };\r\n\r\n  const SendEmail = (email) => {\r\n    axios\r\n      .post(\"/api/register/\", email, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n      });\r\n  };\r\n  // const FormData = () => {\r\n  //   axios\r\n  //     .post(\"http://localhost:8001/api/login\", {\r\n  //       email,\r\n  //       password,\r\n  //     })\r\n  //     .then((res) => {\r\n  //       console.log(res.data);\r\n  //     });\r\n  // };\r\n\r\n  const getUser = () => {\r\n    axios.get(\"/api/login\", { params: { token: token } }).then((res) => {});\r\n  };\r\n\r\n  // const logout = () => {\r\n  //   const tokens = window.localStorage.getItem(\"token\");\r\n  //   console.log(tokens);\r\n  //   axios\r\n  //     .post(\"/api/logout\", \"\", {\r\n  //       headers: {\r\n  //         Authorization: `Bearer ${token} `,\r\n  //         \"Content-Type\": \"application/json\",\r\n  //       },\r\n  //     })\r\n  //     .then((res) => {\r\n  //       console.log(res.data, \"ログアウトしました\");\r\n  //       localStorage.clear();\r\n  //       getUser();\r\n  //     });\r\n  // };\r\n\r\n  // fetch(`http://localhost:8000/api/register/?email=${email}`, {\r\n  //   method: \"POST\",\r\n  //   headers: {\r\n  //     Accept: \"application/json\",\r\n  //     \"Content-Type\": \"application/json\",\r\n  //   },\r\n  //   body: JSON.stringify(email),\r\n  // }).then((response) => {\r\n  //   console.log(response.data);\r\n  // });\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Link to={\"/main\"}>メインページへいく</Link>\r\n      </div>\r\n      ログインページです\r\n      <div>あなたのパスコードは{urlParamStr}です</div>\r\n      <input type=\"email\" onChange={handleInput} />\r\n      <button\r\n        onClick={() => {\r\n          SendEmail(email);\r\n        }}\r\n      >\r\n        送信\r\n      </button>\r\n      <form name=\"contact\" action=\"POST\" data-netlify=\"true\">\r\n        <input type=\"hidden\" name=\"form-name\" value=\"contact\" />\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"メールアドレスを入力してください\"\r\n          onChange={handleInput}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"パスワードを入力してください\"\r\n          onChange={InputPassword}\r\n        />\r\n      </form>\r\n      <button\r\n        onClick={() => {\r\n          dispatch(signIn(email, password));\r\n        }}\r\n      >\r\n        送信\r\n      </button>\r\n      <button\r\n        onClick={() => {\r\n          getUser();\r\n        }}\r\n      >\r\n        ユーザー取得\r\n      </button>\r\n      <button\r\n        onClick={() => {\r\n          dispatch(signout());\r\n        }}\r\n      >\r\n        ログアウト\r\n      </button>\r\n      {token ? <div>ログインしています</div> : <div>ログアウトしています</div>}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Home = () => {\r\n  return <div></div>;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./About.css\";\r\nimport { TableCell } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserisSignIn, getUsername, getUsertoken } from \"./redux/selectors\";\r\nimport { signIn } from \"./redux/operations\";\r\n\r\nexport const About = () => {\r\n  const dispatch = useDispatch();\r\n  const selector = useSelector((state) => state);\r\n\r\n  const user = getUsername(selector);\r\n  const isSignIn = getUserisSignIn(selector);\r\n  const token = getUsertoken(selector);\r\n\r\n  const [date, setdate] = useState([\"月\", \"火\", \"水\", \"木\", \"金\", \"土\", \"日\"]);\r\n  const [firstWeek, setfirstWeek] = useState([]);\r\n  const [secondWeek, setsecondWeek] = useState([]);\r\n  const [thirdWeek, setthirdWeek] = useState([]);\r\n  const [forthWeek, setforthWeek] = useState([]);\r\n\r\n  let dt = new Date();\r\n  const month = new Date(dt.getMonth() - 1, 1);\r\n  const lastMonth = new Date(dt.getFullYear(), dt.getMonth() + 1, 0);\r\n\r\n  let monthIndex = lastMonth.getDate();\r\n\r\n  let strings = monthIndex.toString();\r\n  let arr = [];\r\n  for (let i = 0; i < strings; i++) {\r\n    arr[i] = i + 1;\r\n  }\r\n  const newarr = [];\r\n  arr.forEach((ar, i) => {\r\n    const strin = ar.toString();\r\n    newarr[i] = strin.charAt(ar.value);\r\n  });\r\n\r\n  const firstweek = arr.slice(0, 7);\r\n  const secondweek = arr.slice(7, 15);\r\n  const thirdweek = arr.slice(15, 22);\r\n  const forthweek = arr.slice(22, 32);\r\n\r\n  const TodayIndex = dt.getDate();\r\n  //   const months = monthIndex.forEach((d, i) => {});\r\n\r\n  useEffect(() => {\r\n    console.log(newarr);\r\n    console.log(token);\r\n    setfirstWeek(firstweek);\r\n    setsecondWeek(secondweek);\r\n    setthirdWeek(thirdweek);\r\n    setforthWeek(forthweek);\r\n  }, []);\r\n\r\n  const getUser = () => {\r\n    const tokens = window.localStorage.getItem(\"token\");\r\n    axios\r\n      .get(\"http://localhost:8001/api/login\", { params: { token: tokens } })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={() => {\r\n          getUser();\r\n        }}\r\n      >\r\n        ユーザー取得\r\n      </button>\r\n      <div className=\"container\">\r\n        <div className=\"Weeks\">\r\n          {date.map((d, i) => (\r\n            <div key={i}>\r\n              <div className=\"week-area\">{d}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        {firstWeek.map((d, i) => (\r\n          <div key={i} className=\"month-1\">\r\n            <div className=\"month-area\">\r\n              <div className=\"first-week\">{d}</div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        {secondWeek.map((d, i) => (\r\n          <div key={i} className=\"month-2\">\r\n            <div className=\"month-area\">\r\n              <div className=\"second-week\">{d}</div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        {thirdWeek.map((d, i) => (\r\n          <div key={i} className=\"month-3\">\r\n            <div className=\"month-area\">\r\n              <div className=\"third-week\">{d}</div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        {forthWeek.map((d, i) => (\r\n          <div key={i} className=\"month-4\">\r\n            <div className=\"month-area\">\r\n              <div className=\"forth-week\">{d}</div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export const QuestionArrays = [\r\n  // {\r\n  //   id: 1,\r\n  //   question1: \"問１：配列を展開し、新しい配列を展開するメソッドは何か？\",\r\n  // },\r\n  // {\r\n  //   id: 2,\r\n  //   question2: \"問２：配列の値を絞り込み、特定の値を返すメソッドは何か？\",\r\n  // },\r\n  // {\r\n  //   id: 3,\r\n  //   question3:\r\n  //     \"問３：配列の少なくとも一つの要素が、指定された関数で実装されたテストに合格するかどうかをテストし、ブール値を返すメソッドは何か答えよ\",\r\n  // },\r\n  {\r\n    id: 5,\r\n    question5: \"問4：与えられた関数を、配列の各要素に対して一度ずつ実行する\",\r\n  },\r\n];\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { QuestionArrays } from \"./Questions\";\r\nimport axios from \"axios\";\r\nimport \"./Question.css\";\r\nimport Circle from \"react-circle\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserisSignIn, getUsername, getUsertoken } from \"./redux/selectors\";\r\nimport { Route, Redirect } from \"react-router\";\r\n\r\nexport const Question = ({ children, props }) => {\r\n  const [MyAnswer, setMyAnswer] = useState(\"\");\r\n  const [AnswerStatus, setAnswerStatus] = useState([]);\r\n  const [Value, setValue] = useState([]);\r\n  const [progress, setProperty] = useState(\"\");\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const selector = useSelector((state) => state);\r\n  const user = getUsername(selector);\r\n  const isSignIn = getUserisSignIn(selector);\r\n  const token = getUsertoken(selector);\r\n\r\n  const handleInput = (e) => {\r\n    setMyAnswer(e.target.value);\r\n  };\r\n  useEffect(() => {\r\n    getAnswerStatus();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setProperty(ChartPercent);\r\n  });\r\n\r\n  // const SubmitAnswer = (MyAnswer,quesId) => {\r\n  //   const AnswerId = Value.map((val)=> val.id === quesId)\r\n  //   const data = { answer: MyAnswer,completed };\r\n  //   axios\r\n  //     .put(`/api/answer/${AnswerId}`, data, {\r\n  //       headers: { \"Content-Type\": \"application/json\" },\r\n  //     })\r\n  //     .then((res) => {\r\n  //       const answerStatus = res.data;\r\n  //       console.log(answerStatus);\r\n  //       answerStatus.forEach((answer) => {\r\n  //         QuestionArrays.forEach((que) => {\r\n  //           if (answer.completed === 0 && answer.id === que.id) {\r\n  //             return (answer.completed = 1);\r\n  //           }\r\n  //         });\r\n  //       });\r\n  //       return setAnswerStatus((prev) => {\r\n  //         return [...prev, ...answerStatus];\r\n  //       });\r\n  //     });\r\n  // };\r\n\r\n  const ResetCompleted = (id) => {\r\n    const ResetValue = Value.find((val) => val.id === id);\r\n    const ResetId = ResetValue.id;\r\n    console.log(ResetId);\r\n    const completedData = { completed: 0 };\r\n    axios\r\n      .put(`/api/answer/${ResetId}`, completedData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        getAnswerStatus();\r\n        console.log(res.data);\r\n\r\n        setValue([res.data]);\r\n      });\r\n  };\r\n  const Progression = Value.filter((value) => value.completed == 1).length;\r\n\r\n  const ProGressPercentOfQuestionArrays = QuestionArrays.map(\r\n    (question) => question.id\r\n  ).length;\r\n  var result01 = Progression / ProGressPercentOfQuestionArrays;\r\n  var n = 2; // 小数点第n位まで残す\r\n  var result02 = Math.floor(result01 * Math.pow(10, n)) / Math.pow(10, n);\r\n  const ChartPercent = result02 * 100;\r\n\r\n  const SubmitAnswer = (MyAnswer, quesId) => {\r\n    const GetAnswerId = Value.find((val) => val.id === quesId);\r\n    let AnswerId = GetAnswerId.id;\r\n    const secondData = { completed: 1 };\r\n    const data = { answer: MyAnswer };\r\n    axios\r\n      .post(\"/api/answer\", data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Credentials\": true,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        const ResData = res.data;\r\n        const resId = ResData.map((va) => {\r\n          return va.id;\r\n        });\r\n        console.log(resId);\r\n        if (resId == quesId) {\r\n          axios\r\n            .put(`/api/answer/${AnswerId}`, secondData, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                \"Content-Type\": \"application/json\",\r\n                \"Access-Control-Allow-Credentials\": true,\r\n              },\r\n            })\r\n            .then((res) => {\r\n              getAnswerStatus();\r\n              console.log(res.data);\r\n              const CompletedStatus = [res.data];\r\n              setAnswerStatus(CompletedStatus);\r\n            });\r\n        }\r\n        inputRef.current.value = \"\";\r\n        setProperty(ChartPercent);\r\n      });\r\n  };\r\n\r\n  const getAnswerStatus = () => {\r\n    axios\r\n      .get(\"/api/answer\", \"\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          authorization: `Bearer ${token}`,\r\n          \"Access-Control-Allow-Credentials\": true,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setValue(response.data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Question-container\">\r\n      {token ? (\r\n        <Circle\r\n          animate={true} // アニメーションをつけるかどうか\r\n          size={250} // 円の大きさ\r\n          lineWidth={14} // 円の線の太さ\r\n          progress={progress} // 進捗（％）\r\n          progressColor=\"cornflowerblue\"\r\n          進捗部分の色\r\n          bgColor=\"whitesmoke\" //円の進捗部分以外の色\r\n          textColor=\"hotpink\" //テキスト部分の色\r\n          textStyle={{\r\n            font: \"bold 5rem Helvetica, Arial, sans-serif\", // テキスト部分のスタイル\r\n          }}\r\n          percentSpacing={10} // %と数値部分の余白\r\n          roundedStroke={true} // 円の進捗部分に丸みをもたせるかどうか\r\n          showPercentage={true} // 進捗数値部分を表示させるかどうか\r\n          showPercentageSymbol={true} // 進捗の%部分を表示させるかどうか\r\n        />\r\n      ) : null}\r\n      <div>\r\n        {QuestionArrays.map((ques, index) => (\r\n          <div key={ques.id}>\r\n            {!token ? (\r\n              <div>表示する内容がありません</div>\r\n            ) : (\r\n              <div className=\"question-area\">\r\n                {ques.question1}\r\n                {ques.question2}\r\n                {ques.question3}\r\n                {ques.question5}\r\n                <input\r\n                  ref={inputRef}\r\n                  className=\"Answer-Submit-area\"\r\n                  type=\"text\"\r\n                  placeholder=\"英文字を入れて下さい\"\r\n                  onChange={handleInput}\r\n                />\r\n                メソッド\r\n                <div>\r\n                  {AnswerStatus.map((answer, index) => (\r\n                    <div key={answer.id}>\r\n                      <div className=\"correct-answer-area\">\r\n                        {answer.completed == 1 && ques.id === answer.id ? (\r\n                          <div className=\"correct-answer-text\">正解です</div>\r\n                        ) : (\r\n                          <div></div>\r\n                        )}\r\n                      </div>\r\n                      {answer.completed === 1 && ques.id === answer.id ? (\r\n                        <button\r\n                          onClick={() => {\r\n                            ResetCompleted(ques.id);\r\n                          }}\r\n                        >\r\n                          やり直す\r\n                        </button>\r\n                      ) : (\r\n                        <div></div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                  <button\r\n                    className=\"Submit-Button\"\r\n                    disabled={!MyAnswer}\r\n                    onClick={() => {\r\n                      SubmitAnswer(MyAnswer, ques.id);\r\n                    }}\r\n                  >\r\n                    答えを送信する\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserisSignIn, getUsername, getUsertoken } from \"./redux/selectors\";\r\nimport { signIn, signout } from \"./redux/operations\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Header = () => {\r\n  const dispatch = useDispatch();\r\n  const selector = useSelector((state) => state);\r\n  const user = getUsername(selector);\r\n  const isSignIn = getUserisSignIn(selector);\r\n  const token = getUsertoken(selector);\r\n  console.log(user);\r\n  return (\r\n    <div>\r\n      {token ? (\r\n        <button\r\n          onClick={() => {\r\n            dispatch(signout());\r\n          }}\r\n        >\r\n          ログアウト\r\n        </button>\r\n      ) : (\r\n        <div>\r\n          <Link to={\"/verify/aaa\"}>ログインフォームに遷移する</Link>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Question } from \"./Question\";\r\nimport \"./AnswerSpace.css\";\r\nimport { Header } from \"./Header\";\r\n\r\nexport const AnswerSpace = () => {\r\n  const [answer, setanswer] = useState([]);\r\n\r\n  //   const answerStatus = () => {\r\n  //     AnswerStatus.map((anStatus, index) => {\r\n  //       if (anStatus.completed == false) {\r\n  //         const b = (anStatus.completed = 1);\r\n  //         console.log(AnswerStatus);\r\n  //         return b;\r\n  //       }\r\n  //     });\r\n  //   };\r\n\r\n  //   const a = AnswerStatus.map((anStatus, index) => anStatus.completed === 1);\r\n\r\n  useEffect(() => {\r\n    // if (a) {\r\n    //   console.log(\"正解です\");\r\n    // }\r\n  });\r\n\r\n  const GetAnswer = () => {\r\n    axios\r\n      .get(\"https://laravel-api-appliction.herokuapp.com/api/answer\")\r\n      .then((res) => {\r\n        setanswer(res.data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header></Header>\r\n      <div className=\"Question-area\">\r\n        <Question></Question>\r\n      </div>\r\n\r\n      <button\r\n        onClick={() => {\r\n          GetAnswer();\r\n        }}\r\n      >\r\n        答えを見る\r\n      </button>\r\n      <div>\r\n        {answer.map((ans) => (\r\n          <div key={ans.id}>\r\n            答えは{ans.answer}です。\r\n            <div>\r\n              解説\r\n              {ans.title}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, useCallback, useRef, useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Link, Switch } from \"react-router-dom\";\nimport { Login } from \"./Login\";\nimport { Home } from \"./Home\";\nimport { About } from \"./About\";\nimport { AnswerSpace } from \"./AnswerSpace\";\nimport { Question } from \"./Question\";\nimport { Header } from \"./Header\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUserisSignIn, getUsername, getUsertoken } from \"./redux/selectors\";\nimport { Route, Redirect } from \"react-router\";\n\nfunction App() {\n  const [todos, Settodos] = useState([]);\n\n  const dispatch = useDispatch();\n  const selector = useSelector((state) => state);\n  const user = getUsername(selector);\n  const isSignIn = getUserisSignIn(selector);\n  const token = getUsertoken(selector);\n\n  useEffect(() => {\n    console.log(token);\n  });\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/verify/:slug\" component={Login} />\n        <Route exact path=\"/home\" component={Home} />\n        <Route exact path=\"/about\" component={About} />\n        <Route exact path=\"/question\" component={Question} />\n        <Route exact path=\"/main\" component={AnswerSpace} />\n        <div className=\"App\">\n          <div>\n            {todos.map((todo, index) => (\n              <div key={index}>\n                <div>{todo.name}</div>a\n              </div>\n            ))}\n          </div>\n        </div>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n  users: {\r\n    isSignIn: false,\r\n    id: \"\",\r\n    name: \"\",\r\n    token: \"\",\r\n  },\r\n};\r\n\r\nexport default initialState;\r\n","import * as Actions from \"./actions\";\r\n\r\nimport initialState from \"../store/initialState\";\r\n\r\nexport const UsersReducer = (state = initialState.users, action) => {\r\n  switch (action.type) {\r\n    case Actions.SIGN_IN:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    case Actions.SIGN_OUT:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    // case Actions.GET_LOGIN_USER:\r\n    //   return {\r\n    //     ...state,\r\n    //     ...action.payload,\r\n    //   };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  createStore as reduxCreateStore,\r\n  combineReducers,\r\n  applyMiddleware,\r\n  compose,\r\n} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { connectRouter, routerMiddleware } from \"connected-react-router\";\r\nimport { UsersReducer } from \"../redux/reducers\";\r\nimport persistState from \"redux-localstorage\";\r\n\r\nexport default function createStore(history) {\r\n  return compose(persistState())(reduxCreateStore)(\r\n    combineReducers({\r\n      router: connectRouter(history),\r\n      users: UsersReducer,\r\n    }),\r\n    applyMiddleware(routerMiddleware(history), thunk)\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport createStore from \"./store/store\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport * as History from \"history\";\n\nconst history = History.createBrowserHistory();\n\nexport const store = createStore(history);\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}